/* ************************************************************************** */
/* 
 * ファイル名           failsafe.h
 * コンポーネント名     フェールセーフ
 * 説明                 フェールセーフ処理
 * 会社名               パーソルエクセルHRパートナーズ（株）
 * 作成日               2023/12/12
 * 作成者               高根
  */
/* ************************************************************************** */
#ifndef __COM_FS_H
#define __COM_FS_H
/* ************************************************************************** */
/* pragma定義                                                                 */
/* ************************************************************************** */


/* ************************************************************************** */
/* include(システムヘッダ)                                                    */
/* ************************************************************************** */
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

/* ************************************************************************** */
/* include(ユーザ定義ヘッダ)                                                  */
/* ************************************************************************** */
#include "process.h"
#include "resource.h"

/* ************************************************************************** */
/* マクロ定義                                                                 */
/* ************************************************************************** */
#define DEF_FS_ERR_MAX	(34)									/* エラーコード最大値（エラー一覧数） */									
#define DEF_FS_SHMEM_NAME	"/failsafeinfo"						/* 共有メモリ名 */

//* ************************************************************************** */
/* typedef 定義                                                               */
/* ************************************************************************** */
/* 故障管理情報 */
typedef struct{
	int32_t				proc;									/* プロセス異常 */
	int32_t				cpu_load[DEF_CPU_NUM+1];				/* CPU負荷異常 */
	int32_t				mem;									/* メモリ使用量異常 */
	int32_t				disk;									/* ディスク使用率異常 */
	int32_t				cpu_therm;								/* CPU温度異常 */
	int32_t				camera[6];									/* カメラ通信異常 */
	int32_t				altitude;								/* 高度通信異常 */
	int32_t				gnss_takion;							/* GNSS(Takion)通信異常 */
	int32_t				ins;									/* INS通信異常 */
	int32_t				imu;									/* IMU通信異常 */
	int32_t				wifi;									/* Wifi通信異常 */
	int32_t				atm_pressure;							/* 大気圧計通信異常 */
	int32_t				ecu_jetson[3];								/* ECU(NVIDIA)通信異常 */
	int32_t				mag;									/* 磁気センサ通信異常 */
	int32_t				ecu;									/* ECU通信異常 */
}failsafeInfo;

/* 故障管理一覧表 */
typedef struct{
	uint32_t		errcode;									/* エラーコード */
	int32_t*			data;									/* 故障レベル */
}errorTable;

/* ************************************************************************** */
/* enum定義                                                                   */
/* ************************************************************************** */
/* エラーコード */
typedef enum{
	ENUM_FS_PROC = 1,											/* プロセス異常 */
	ENUM_FS_CPU = 2,											/* CPU負荷異常1 */
	ENUM_FS_CPU1 = 3,											/* CPU負荷異常2 */
	ENUM_FS_CPU2 = 4,											/* CPU負荷異常3 */
	ENUM_FS_CPU3 = 5,											/* CPU負荷異常4 */
	ENUM_FS_CPU4 = 6,											/* CPU負荷異常5 */
	ENUM_FS_CPU5 = 7,											/* CPU負荷異常6 */
	ENUM_FS_CPU6 = 8,											/* CPU負荷異常7 */
	ENUM_FS_CPU7 = 9,											/* CPU負荷異常8 */
	ENUM_FS_CPU8 = 10,											/* CPU負荷異常9 */
	ENUM_FS_CPU9 = 11,											/* CPU負荷異常10 */
	ENUM_FS_CPU10 = 12,											/* CPU負荷異常11 */
	ENUM_FS_CPU11 = 13,											/* CPU負荷異常12 */
	ENUM_FS_CPU12 = 14,											/* CPU負荷異常13 */
	ENUM_FS_MEM = 15,											/* メモリ使用量異常 */
	ENUM_FS_DISK = 16,											/* ディスク使用量異常 */
	ENUM_FS_THERM = 17,											/* CPU温度異常 */
	ENUM_FS_CAMERA1 = 18,										/* カメラ通信異常 */
	ENUM_FS_CAMERA2 = 19,										/* カメラ通信異常 */
	ENUM_FS_CAMERA3 = 20,										/* カメラ通信異常 */
	ENUM_FS_CAMERA4 = 21,										/* カメラ通信異常 */
	ENUM_FS_CAMERA5 = 22,										/* カメラ通信異常 */
	ENUM_FS_CAMERA6 = 23,										/* カメラ通信異常 */
	ENUM_FS_ALTITUDE = 24,										/* 高度計通信異常 */
	ENUM_FS_GNSS_TAKION = 25,									/* GNSS(Takion)通信異常 */
	ENUM_FS_INS = 26,											/* INS通信異常 */
	ENUM_FS_IMU = 27,											/* IMU通信異常 */
	ENUM_FS_WIFI = 28,											/* Wifi通信異常 */
	ENUM_FS_ATM_PRESSURE = 29,									/* 大気圧計通信異常 */
	ENUM_FS_ECU_JETSON1 = 30,									/* ECU(NVIDIA)通信異常 */
	ENUM_FS_ECU_JETSON2 = 31,									/* ECU(NVIDIA)通信異常 */
	ENUM_FS_ECU_JETSON3 = 32,									/* ECU(NVIDIA)通信異常 */
	ENUM_FS_MAG = 33,											/* 磁気センサ通信異常 */
	ENUM_FS_ECU = 34,											/* ECU通信異常 */
}ENUM_FS_ERRCODE;

/* ************************************************************************** */
/* struct/union定義                                                           */
/* ************************************************************************** */





/* ************************************************************************** */
/* extern 変数宣言                                                            */
/* ************************************************************************** */


/* ************************************************************************** */
/* プロトタイプ宣言(公開関数)                                                 */
/* ************************************************************************** */
extern int32_t com_fs_getfail(uint32_t errcode);


#endif /* __COM_FS_H */
